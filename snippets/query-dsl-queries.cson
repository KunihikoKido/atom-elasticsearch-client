".source.json, .source.elasticsearch.query-dsl":
  "Match Query":
    "prefix": "match_query"
    "body": """
    "match": {
      "${1:message}": "${2:this is a test}"
    }$3
    """
  "Multi Match Query":
    "prefix": "multi_match_query"
    "body": """
    "multi_match": {
      "query": "${1: this is a test}",
      "fields": ["${2:subject}", "${3:message}"],
      "operator": "and"
    }$4
    """
  "Bool Query":
    "prefix": "bool_query"
    "body": """
      "bool": {
        "must": [{$1}],
        "must_not": [{$2}],
        "should": [{$3}],
        "minimum_should_match": ${4:1},
        "boost": ${5:1.0}
      }$6
    """
  "Boosting Query":
    "prefix": "boosting_query"
    "body": """
      "boosting": {
        "positive": {$1},
        "negative": {$2},
        "negative_boost": ${3:0.2}
      }$4
    """
  "Common Term Query":
    "prefix": "common_query"
    "body": """
      "common": {
        "${1:body}": {
          "query": "${2:this is bonsai cool}",
          "cutoff_frequency": ${3:0.001}
        }
      }$4
    """
  "Constant Score Query":
    "prefix": "constant_score_query"
    "body": """
      "constant_score": {
        "filter": {
          ${1:"term": \{"user": "kimchy"\}}
        },
        "boost": ${3:1.2}
      }$4
    """
  "Dis Max Query":
    "prefix": "dis_max_query"
    "body": """
      "dis_max": {
        "tie_breaker": ${1:0.7},
        "boost": ${2:1.2},
        "queries": [
          {
            ${3:"term": \{"age": 34\}}
          },
          {
            ${4:"term": \{"age": 35\}}
          }
        ]
      }$5
    """
  "Filtered Query":
    "prefix": "filtered_query"
    "body": """
      "filtered": {
        "query": {
          ${1:"match": \{"tweet": "full text search"\}}
        },
        "filter": {
          ${2:"range": \{"created": \{"gte": "now -1d / d"\}\}}
        }
      }$3
    """
  "Fuzzy Like This Query":
    "prefix": "fuzzy_like_this_query"
    "body": """
      "fuzzy_like_this": {
        "fields": [${1:"name.first", "name.last"}],
        "like_text": "${2:text like this one}",
        "max_query_terms": ${3:12}
      }$4
    """
  "Fuzzy Like This Field Query":
    "prefix": "fuzzy_like_this_field_query"
    "body": """
      "fuzzy_like_this_field": {
        "${1:name.first}": {
          "like_text": "${2:text like this one}",
          "max_query_terms": ${3:12}
        }
      }$4
    """
  "Function Score Query":
    "prefix": "function_score_query"
    "body": """
      "function_score": {
        "${1:(query|filter)}": {$2},
        "boost": "${3:boost for the whole query}",
        "FUNCTION": {$4},
        "boost_mode": "${5:(multiply|replace|...)}"
      }$6
    """
  "Fuzzy Query":
    "prefix": "fuzzy_query"
    "body": """
      "fuzzy": {
        "value": "${1:ki}",
        "boost": ${2:1.0},
        "fuzziness": ${3:2},
        "prefix_length": ${4:0},
        "max_expansions": ${5:100}
      }$6
    """
  "Geo Shape Query":
    "prefix": "geo_shape_query"
    "body": """
      "geo_shape": {
        "location": {
          "shape": {
            "type": "envelope",
            "coordinates": [[${1:13, 53}],[${2:14, 52}]]
          }
        }
      }$2
    """
  "Has Child Query":
    "prefix": "has_child_query"
    "body": """
      "has_child": {
        "type": "${1:blog_tag}",
        "query": {
          "term": {
            "${2:tag}": "${3:something}"
          }
        }
      }$4
    """
  "Has Parent Query":
    "prefix": "has_parent_query"
    "body": """
      "has_parent": {
        "type": "${1:blog}",
        "query": {
          "term": {
            "${2:tag}": "${3:something}"
          }
        }
      }$4
    """
  "Ids Query":
    "prefix": "ids_query"
    "body": """
      "ids": {
        "type": "${1:my_type}",
        "values": [${2:"1", "4", "100"}]
      }$3
    """
  "Indices Query":
    "prefix": "indices_query"
    "body": """
      "indices": {
        "indices": [${1:"index1", "index2"}],
        "query": {
          ${2:"term": \{"tag": "wow"\}}
        },
        "no_match_query": {
          ${3:"term": \{"tag": "kow"\}}
        }
      }$4
    """
  "Match All Query":
    "prefix": "match_all_query"
    "body": """
      "match_all": {${1:"boost": 1.2}}$2
    """
  "More Like This Query":
    "prefix": "more_like_this_query"
    "body": """
      "more_like_this": {
        "fields": [${1:"title", "description"}],
        "like_text": "${2:Once upon a time}",
        "min_term_freq": ${3:1},
        "max_query_terms": ${4:12}
      }$5
    """
  "Nested Query":
    "prefix": "nested_query"
    "body": """
      "nested": {
        "path": "${1:obj1}",
        "score_mode": "${2:avg}",
        "query": {
          $3
        }
      }$4
    """
  "Prefix Query":
    "prefix": "prefix_query"
    "body": """
      "prefix": {
        "${1:user}": "${2:ki}"
      }$3
    """
  "Query String Query":
    "prefix": "query_string_query"
    "body": """
      "query_string": {
        "fields": [${1:"content", "name^5"}],
        "query": "${2:this AND that}",
        "default_operator": "${3:AND}"
      }$4
    """
  "Simple Query String Query":
    "prefix": "simple_query_string_query"
    "body": """
      "simple_query_string": {
        "query": "${1:\"fried eggs\" +(eggplant | potato) -frittata}",
        "fields": [${2:"body^5","_all"}],
        "default_operator": "${3:and}"
      }$4
    """
  "Range Query":
    "prefix": "range_query"
    "body": """
      "range": {
        "${1:age}": {
          "${2:gte}": ${3:10},
          "${4:lte}": ${5:20},
          "boost": ${6:2.0}
        }
      }$7
    """
  "Date Range Query":
    "prefix": "date_range_query"
    "body": """
      "range": {
        "${1:born}": {
          "${2:gte}": ${3:2012-01-01},
          "${4:lte}": ${5:now},
          "time_zone": "${6:+9:00}"
        }
      }$7
    """
  "Regexp Query":
    "prefix": "regexp_query"
    "body": """
      "regexp": {
        "${1:name.first}": {
          "value": "${2:s.*y}",
          "boost": ${3:1.2},
          "flags" : "${4:INTERSECTION|COMPLEMENT|EMPTY}"
        }
      }$5
    """
  "Span First Query":
    "prefix": "span_first_query"
    "body": """
      "span_first": {
        "match": {
          "span_term": {"user": "kimchy"}
        },
        "end": 3
      }$1
    """
  "Span Multi Term Query":
    "prefix": "span_multi_query"
    "body": """
      "span_multi": {
        "match": {
          "prefix": {
            "user": {
              "value": "ki",
              "boost": 1.08
            }
          }
        }
      }$1
    """
  "Span Near Query":
    "prefix": "span_near_query"
    "body": """
      "span_near": {
        "clauses": [
          {"span_term": { "field": "value1"}},
          {"span_term": {"field": "value2"}},
          {"span_term": {"field": "value3"}}
        ],
        "slop": 12,
        "in_order": false,
        "collect_payloads": false
      }$1
    """
  "Span Not Query":
    "prefix": "span_not_query"
    "body": """
      "span_not": {
        "include": {
          "span_term": {"field1": "hoya"}
        },
        "exclude": {
          "span_near": {
            "clauses": [
              {"span_term": {"field1": "la"}},
              {"span_term": {"field1": "hoya"}}
            ],
            "in_order": true,
            "slop": 0
          }
        }
      }$1
    """
  "Span Or Query":
    "prefix": "span_or_query"
    "body": """
      "span_or": {
        "clauses": [
          {
            "span_term": {
              "field": "value1"
            }
          },
          {
            "span_term": {
              "field": "value2"
            }
          },
          {
            "span_term": {
              "field": "value3"
            }
          }
        ]
      }$1
    """
  "Span Term Query":
    "prefix": "span_term_query"
    "body": """
      "span_term": {
          "${1:user}": {
              "boost": ${2:2.0},
              "value": "${3:kimchy}"
          }
      }$4
    """
  "Term Query":
    "prefix": "term_query"
    "body": """
      "term": {
        "${1:user}": {
          "value": "${2:kimchy}",
          "boost": ${3:2.0}
        }
      }$4
    """
  "Terms Query":
    "prefix": "terms_query"
    "body": """
      "terms": {
        "${1:tags}": [${2:"blue", "pill"}],
        "minimum_should_match": 1
      }$3
    """
  "Wildcard Query":
    "prefix": "wildcard_query"
    "body": """
      "wildcard": {
        "${1:user}": {
          "value": "${2:ki*y}",
          "boost": ${3:2.0}
        }
      }$4
    """
  "Template Query":
    "prefix": "template_query"
    "body": """
      "template": {
        "query": {
          "match": {
            "text": "{{query_string}}"
          }
        },
        "params": {
          "query_string": "all about search"
        }
      }$1
    """
